{"version":3,"file":"ui-behaviour.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/OLSKInternational/main.js","../node_modules/OLSKRootLink/main.svelte","../node_modules/ROCORootLink/main.svelte","../node_modules/OLSKLanguageSwitcher/main.js","../node_modules/OLSKString/main.js","../node_modules/OLSKLanguageSwitcher/main.svelte","../ModuleHeader.svelte","../ModuleEditorMarkdown.svelte","../ModuleEditorHTML.svelte","../ModuleEditorRTF.svelte","../ModulePaneSource.svelte","../ModulePaneOutput.svelte","../node_modules/OLSKServiceWorker/main.svelte","../Main.svelte","../rollup-start.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","(function(global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t\t(factory((global.OLSKInternational = global.OLSKInternational || {})));\n}(this, (function(exports) { 'use strict';\n\n\tconst mod = {\n\n\t\tOLSKInternationalDefaultIdentifier () {\n\t\t\treturn 'i18n';\n\t\t},\n\n\t\tOLSKInternationalIsTranslationFileBasename (inputData) {\n\t\t\tif (typeof inputData !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (inputData.split('.').length < 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!inputData.split('.').pop().match(/ya?ml/i)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (inputData.split('-').shift() !== mod.OLSKInternationalDefaultIdentifier()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!mod._OLSKInternationalLanguageID(inputData)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tOLSKInternationalLanguageID (inputData) {\n\t\t\tif (!mod.OLSKInternationalIsTranslationFileBasename(inputData)) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\treturn mod._OLSKInternationalLanguageID(inputData);\n\t\t},\n\n\t\tOLSKInternationalSimplifiedLanguageCode (inputData) {\n\t\t\tif (typeof inputData !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\treturn inputData.split('-').shift();\n\t\t},\n\n\t\t_OLSKInternationalLanguageID (inputData) {\n\t\t\treturn inputData.replace(mod.OLSKInternationalDefaultIdentifier() + '-', '').split('.').shift();\n\t\t},\n\n\t\tOLSKInternationalLocalizedString (translationKey, translationDictionary) {\n\t\t\tif (typeof translationDictionary !== 'object' || translationDictionary === null) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tvar localizedString = translationDictionary[translationKey];\n\n\t\t\tif (!localizedString) {\n\t\t\t\tlocalizedString = 'TRANSLATION_MISSING';\n\t\t\t\tconsole.log([\n\t\t\t\t\tlocalizedString,\n\t\t\t\t\ttranslationKey,\n\t\t\t\t\t]);\n\t\t\t}\n\n\t\t\treturn localizedString;\n\t\t},\n\n\t\tOLSKInternationalLocalizedStringCallback (dictionary, fallbackLocales) {\n\t\t\tif (typeof dictionary !== 'object' || dictionary === null) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tif (!Array.isArray(fallbackLocales)) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tconst _locales = Object.keys(dictionary).reverse().concat(...fallbackLocales.map(function (e) {\n\t\t\t\t\treturn [mod.OLSKInternationalSimplifiedLanguageCode(e), e]\n\t\t\t\t}).reverse())\n\n\t\t\treturn function (signature, requestLocales) {\n\t\t\t\tif (!Array.isArray(requestLocales)) {\n\t\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t\t}\n\n\t\t\t\tlet locales = _locales.concat(...requestLocales.map(function (e) {\n\t\t\t\t\treturn [mod.OLSKInternationalSimplifiedLanguageCode(e), e]\n\t\t\t\t}).reverse(), [])\n\n\t\t\t\tlet outputData;\n\n\t\t\t\twhile (!outputData && locales.length) {\n\t\t\t\t\toutputData = (dictionary[locales.pop()] || {})[signature];\n\t\t\t\t}\n\n\t\t\t\tif (!outputData) {\n\t\t\t\t\tconsole.log([outputData = 'TRANSLATION_MISSING', signature].join(' '));\n\t\t\t\t}\n\n\t\t\t\treturn outputData;\t\t\t\t\n\t\t\t};\n\t\t},\n\n\t\t_OLSKInternationalPaths (cwd, filter) {\n\t\t\tif (typeof cwd !== 'string' || !cwd.trim()) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tconst _require = require;\n\n\t\t\treturn _require('glob').globSync(`**/*${ mod.OLSKInternationalDefaultIdentifier() }*.y*(a)ml`, {\n\t\t\t\tcwd,\n\t\t\t\trealpath: true,\n\t\t\t}).filter(function (e) {\n\t\t\t\tif (!filter) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn !e.match(filter);\n\t\t\t}).filter(function (e) {\n\t\t\t\treturn mod.OLSKInternationalIsTranslationFileBasename(_require('path').basename(e));\n\t\t\t});\n\t\t},\n\n\t\t_OLSKInternationalConstructedDictionary (inputData) {\n\t\t\tif (!Array.isArray(inputData)) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tconst _require = require;\n\n\t\t\treturn inputData.reduce(function (coll, item) {\n\t\t\t\tconst key = mod.OLSKInternationalLanguageID(_require('path').basename(item));\n\n\t\t\t\tcoll[key] = Object.assign(coll[key] || {}, _require('js-yaml').load(_require('fs').readFileSync(item, 'utf8')))\n\n\t\t\t\treturn coll;\n\t\t\t}, {});\n\t\t},\n\n\t\tOLSKInternationalDictionary (cwd) {\n\t\t\treturn this._OLSKInternationalConstructedDictionary(this._OLSKInternationalPaths(cwd));\n\t\t},\n\n\t\t_OLSKInternationalCompilationObject (cwd, languageID) {\n\t\t\tconst _require = require;\n\n\t\t\treturn this._OLSKInternationalPaths(cwd, /node_modules|__external/).filter(function (e) {\n\t\t\t\tif (!languageID) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn mod.OLSKInternationalLanguageID(_require('path').basename(e)) === languageID;\n\t\t\t}).reduce(function (coll, item) {\n\t\t\t\treturn Object.assign(coll, {\n\t\t\t\t\t[item]: _require('js-yaml').load(_require('fs').readFileSync(item, 'utf8')),\n\t\t\t\t});\n\t\t\t}, {});\n\t\t},\n\n\t\t_OLSKInternationalCompilationFilePath (cwd) {\n\t\t\tif (typeof cwd !== 'string' || !cwd.trim()) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\t\t\tconst _require = require;\n\n\t\t\treturn _require('path').join(cwd, '__compiled', mod.OLSKInternationalDefaultIdentifier() + '-compilation.yml')\n\t\t},\n\n\t\t_SafeDump (inputData) {\n\t\t\tconst _require = require;\n\n\t\t\treturn _require('js-yaml').dump(inputData, {\n\t\t\t\tlineWidth: Infinity,\n\t\t\t});\n\t\t},\n\n\t\tOLSKInternationalWriteCompilationFile (cwd, languageID) {\n\t\t\tconst _require = require;\n\n\t\t\tconst data = mod._SafeDump(this._OLSKInternationalCompilationObject(cwd, languageID));\n\n\t\t\tconst outputDirectory = _require('path').dirname(mod._OLSKInternationalCompilationFilePath(cwd));\n\n\t\t\tif (!_require('fs').existsSync(outputDirectory)){\n\t\t\t\t_require('fs').mkdirSync(outputDirectory);\n\t\t\t}\n\n\t\t\t_require('fs').writeFileSync(mod._OLSKInternationalCompilationFilePath(cwd), data);\n\t\t},\n\n\t\tOLSKInternationalSpreadCompilationFile (cwd, languageID) {\n\t\t\tif (typeof cwd !== 'string' || !cwd.trim()) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tconst _require = require;\n\n\t\t\tconst compilation = _require('js-yaml').load(_require('fs').readFileSync(mod._OLSKInternationalCompilationFilePath(cwd), 'utf8'));\n\n\t\t\tObject.keys(compilation).map(function (e) {\n\t\t\t\treturn _require('fs').writeFileSync(e, mod._SafeDump(compilation[e]));\n\t\t\t});\n\t\t},\n\n\t\tOLSKInternationalAddControllerLanguageCode (cwd, languageID) {\n\t\t\tif (typeof cwd !== 'string' || !cwd.trim()) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tif (typeof languageID !== 'string' || !languageID.trim()) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tconst _require = require;\n\n\t\t\t_require('glob').globSync('controller.js', {\n\t\t\t\tcwd,\n\t\t\t\tmatchBase: true,\n\t\t\t\trealpath: true,\n\t\t\t}).forEach(function (file) {\n\t\t\t\tif (file.match(/.*(\\.git|DS_Store|node_modules|vendor|__\\w+)\\/.*/i)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst item = _require(file);\n\n\t\t\t\tif (typeof item.OLSKControllerRoutes !== 'function') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!(function(inputData) {\n\t\t\t\t\tif (Array.isArray(inputData)) {\n\t\t\t\t\t\treturn inputData;\n\t\t\t\t\t};\n\n\t\t\t\t\treturn Object.entries(inputData).reduce(function (coll, item) {\n\t\t\t\t\t\treturn coll.concat(Object.assign(item[1], {\n\t\t\t\t\t\t\tOLSKRouteSignature: item[0],\n\t\t\t\t\t\t}));\n\t\t\t\t\t}, []);\n\t\t\t\t})(item.OLSKControllerRoutes()).filter(function (e) {\n\t\t\t\t\treturn e.OLSKRouteLanguageCodes;\n\t\t\t\t}).filter(function (e) {\n\t\t\t\t\treturn !e.OLSKRouteLanguageCodes.includes(languageID);\n\t\t\t\t}).length) {\n\t\t\t\t\treturn\n\t\t\t\t};\n\n\t\t\t\tconst match = _require('fs').readFileSync(file, 'utf8').match(/OLSKRouteLanguageCodes: \\[.*\\]/g);\n\n\t\t\t\tif (!match) {\n\t\t\t\t\tthrow new Error(`invalid OLSKRouteLanguageCodes syntax in ${ e }`);\n\t\t\t\t}\n\n\t\t\t\tmatch.map(function (e) {\n\t\t\t\t\tconst match = e.match(/\\[.*\\]/);\n\t\t\t\t\treturn _require('fs').writeFileSync(file, _require('fs').readFileSync(file, 'utf8').replace(/OLSKRouteLanguageCodes: \\[.*\\]/, `OLSKRouteLanguageCodes: ['${JSON.parse(match[0].replace(/\\'/g, '\"')).concat(languageID).join('\\', \\'')}']`));\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (process.argv[2].endsWith('olsk-i18n-add')) {\n\t\t\t\tprocess.exit();\n\t\t\t}\n\t\t},\n\n\t};\n\t\n\tObject.assign(exports, mod);\n\n\tObject.defineProperty(exports, '__esModule', {\n\t\tvalue: true\n\t});\n\n})));\n\nif (typeof exports === 'object') {\n\texports.OLSKLocalized = function (inputData) {\n\t\treturn exports.OLSKInternationalLocalizedString(inputData, JSON.parse(`{\"OLSK_I18N_SEARCH_REPLACE\":\"OLSK_I18N_SEARCH_REPLACE\"}`)[window.OLSKPublicConstants('OLSKSharedPageCurrentLanguage')]);\n\t};\n}\n","<script>\nexport let OLSKRootLinkURL;\nexport let OLSKRootLinkImageURL;\nexport let OLSKRootLinkTextAlternate = null;\n\nimport { OLSKLocalized } from 'OLSKInternational';\n</script>\n\n<a class=\"OLSKRootLink OLSKCommonRootLink\" href={ OLSKRootLinkURL } title={ OLSKRootLinkTextAlternate || OLSKLocalized('OLSKRootLinkTextHome') }>\n\t<img class=\"OLSKRootLinkImage\" role=\"presentation\" src={ OLSKRootLinkImageURL }>\n</a>\n","<script>\nimport { OLSKLocalized } from 'OLSKInternational';\n\nimport OLSKRootLink from 'OLSKRootLink';\n</script>\n\n<div class=\"ROCORootLink\">\n\n<OLSKRootLink OLSKRootLinkURL=\"https://rosano.ca\" OLSKRootLinkImageURL={ '/_shared/__external/ROCORootLink/identity-transparent.svg' } OLSKRootLinkTextAlternate={ OLSKLocalized('ROCORootLinkText') } />\n\n</div>\n","const mod = {\n\n\tOLSKLanguageSwitcherCodesMap () {\n\t\treturn {\n\t\t\ten: 'English',\n\t\t\tfr: 'Français',\n\t\t\tes: 'Español',\n\t\t\tpt: 'Português',\n\t\t\tde: 'Deutsch',\n\t\t};\n\t},\n\n\tOLSKLanguageSwitcherLauncherFakeItemProxy () {\n\t\treturn {\n\t\t\tLCHRecipeName: 'OLSKLanguageSwitcherLauncherFakeItemProxy',\n\t\t\tLCHRecipeCallback () {},\n\t\t};\n\t},\n\n\tOLSKLanguageSwitcherLauncherItemSwitch (params, debug = {}) {\n\t\tif (typeof params !== 'object' || params === null) {\n\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t}\n\n\t\tif (typeof params.ParamLanguageCode !== 'string') {\n\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t}\n\n\t\tif (typeof params.ParamRouteConstant !== 'string') {\n\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t}\n\n\t\tif (typeof params.OLSKCanonical !== 'function') {\n\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t}\n\n\t\treturn {\n\t\t\tLCHRecipeSignature: ['OLSKLanguageSwitcherLauncherItemSwitch', params.ParamLanguageCode].join('-'),\n\t\t\tLCHRecipeName: mod.OLSKLanguageSwitcherCodesMap()[params.ParamLanguageCode],\n\t\t\tLCHRecipeCallback () {\n\t\t\t\t(debug.DebugWindow || window).location.href = params.OLSKCanonical(params.ParamRouteConstant, {\n\t\t\t\t\tOLSKRoutingLanguage: params.ParamLanguageCode,\n\t\t\t\t});\n\t\t\t},\n\t\t\tLCHRecipeIsExcluded () {\n\t\t\t\treturn !!params.ParamAuthorized;\n\t\t\t},\n\t\t};\n\t},\n\n\tOLSKLanguageSwitcherRecipes (params) {\n\t\tif (typeof params !== 'object' || params === null) {\n\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t}\n\n\t\tif (!Array.isArray(params.ParamLanguageCodes)) {\n\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t}\n\n\t\tif (typeof params.ParamCurrentLanguage !== 'string') {\n\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t}\n\n\t\tif (typeof params.ParamSpecUI !== 'boolean') {\n\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t}\n\n\t\treturn [\n\t\t\tmod.OLSKLanguageSwitcherLauncherFakeItemProxy(),\n\t\t].concat(params.ParamLanguageCodes.filter(function (e) {\n\t\t\treturn e !== params.ParamCurrentLanguage;\n\t\t}).map(function (ParamLanguageCode) {\n\t\t\treturn mod.OLSKLanguageSwitcherLauncherItemSwitch(Object.assign(Object.assign(Object.assign({}, params), {}), {\n\t\t\t\tParamLanguageCode,\n\t\t\t}))\n\t\t})).filter(function (e) {\n\t\t\tif (params.ParamSpecUI) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn !(e.LCHRecipeSignature || e.LCHRecipeName).match(/Fake/);\n\t\t});\n\t},\n\n};\n\nObject.assign(exports, mod);\n","(function(global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t\t(factory((global.OLSKString = global.OLSKString || {})));\n}(this, (function(exports) { 'use strict';\n\n\tconst mod = {\n\n\t\tOLSKStringFormatted (inputData) {\n\t\t\tif (typeof inputData !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tvar substitutions = Object.values(arguments).slice(1);\n\n\t\t\tif (!substitutions.length) {\n\t\t\t\treturn inputData;\n\t\t\t}\n\n\t\t\tvar formattedString = inputData;\n\n\t\t\t(inputData.match(/%@/g) || []).forEach(function(e, i) {\n\t\t\t\tformattedString = formattedString.replace(e, substitutions[i]);\n\t\t\t});\n\n\t\t\tmod._OLSKStringAllMatches(/%\\$(\\d*)@/g, inputData).forEach(function(e) {\n\t\t\t\tformattedString = formattedString.replace(e[0], substitutions[e[1] - 1]);\n\t\t\t});\n\n\t\t\treturn formattedString;\n\t\t},\n\n\t\t_OLSKStringAllMatches (regex, string) {\n\t\t\tvar matches = [];\n\n\t\t\tvar match = regex.exec(string);\n\n\t\t\twhile (match != null) {\n\t\t\t\tmatches.push(match);\n\n\t\t\t\tmatch = regex.exec(string);\n\t\t\t}\n\n\t\t\treturn matches;\n\t\t},\n\n\t\tOLSKStringReplaceTokens (param1, param2) {\n\t\t\tif (typeof param1 !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tif (typeof param2 !== 'object' || param2 === null) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\treturn Object.entries(param2).reduce(function (coll, item) {\n\t\t\t\treturn coll.replace(new RegExp(item.shift(), 'g'), item.pop());\n\t\t\t}, param1);\n\t\t},\n\n\t\tOLSKStringPatch (param1, param2, param3) {\n\t\t\tif (typeof param1 !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tif (typeof param2 !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tif (typeof param3 !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tif (!param1.includes(param2) && !param1.includes(param3)) {\n\t\t\t\tconsole.error(`source includes neither of \"${ param2 }\" or \"${ param3 }\"`);\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tif (param3.includes(param2)) {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\treturn param1.split(param2).join(param3);\n\t\t},\n\n\t\tOLSKStringMatch (param1, param2, param3 = 'includes') {\n\t\t\tif (typeof param1 !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tif (typeof param2 !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\tif (typeof param3 !== 'undefined') {\n\t\t\t\tif (typeof param3 !== 'string') {\n\t\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Searching and sorting text with diacritical marks in JavaScript | Thread Engineering https://thread.engineering/2018-08-29-searching-and-sorting-text-with-diacritical-marks-in-javascript/\n\t\t\treturn param2.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')[param3](param1.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, ''));\n\t\t},\n\n\t\tOLSKStringSnippet (inputData) {\n\t\t\tif (typeof inputData !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\treturn inputData.length <= 100 ? inputData : inputData.slice(0, 100).split(' ').slice(0, -1).join(' ').concat('…');\n\t\t},\n\n\t\tOLSKStringEncode (inputData) {\n\t\t\tif (typeof inputData !== 'string') {\n\t\t\t\tthrow new Error('OLSKErrorInputNotValid');\n\t\t\t}\n\n\t\t\treturn mod.OLSKStringReplaceTokens(encodeURIComponent(inputData), {\n\t\t\t\t'\\\\(': '%28',\n\t\t\t\t'\\\\)': '%29',\n\t\t\t});\n\t\t},\n\n\t};\n\n\tObject.assign(exports, mod);\n\n\tObject.defineProperty(exports, '__esModule', {\n\t\tvalue: true\n\t});\n\n})));\n\nif (typeof exports === 'object') {\n\texports.OLSKFormatted = exports.OLSKStringFormatted;\n}\n","<script>\nexport let OLSKSharedPageLanguagesAvailable;\nexport let OLSKSharedPageCurrentLanguage;\nexport let OLSKSharedActiveRouteConstant;\n\nimport { OLSKLocalized } from 'OLSKInternational';\nimport logic from './main.js';\nimport OLSKString from 'OLSKString';\n\nconst mod = {\n\n\t// DATA\n\n\tDataLinkTitle (inputData) {\n\t\treturn OLSKString.OLSKStringFormatted(OLSKLocalized('OLSKLanguageSwitcherVersionFormat'), OLSKLocalized('OLSKLanguageSwitcherVersionName')[inputData], logic.OLSKLanguageSwitcherCodesMap()[inputData]);\n\t},\n\n};\n</script>\n\n<div class=\"OLSKLanguageSwitcher\">\n\n{#each OLSKSharedPageLanguagesAvailable as e}\n\t{#if e === OLSKSharedPageCurrentLanguage }\n\t\t<span class=\"OLSKLanguageSwitcherSelected\">{ e.toUpperCase() }</span>\n\t{/if}\n\n\t{#if e !== OLSKSharedPageCurrentLanguage}\n\t\t<a class=\"OLSKLanguageSwitcherVersion\" aria-label=\"{ mod.DataLinkTitle(e) }\" title=\"{ mod.DataLinkTitle(e) }\" href=\"{ window.OLSKCanonical(OLSKSharedActiveRouteConstant, {\n\t\t\tOLSKRoutingLanguage: e,\n\t\t}) }\">{ e.toUpperCase() }</a>\t\n\t{/if}\n{/each}\n\n</div>\n\n","<script>\nimport { OLSKLocalized } from 'OLSKInternational';\n\nimport ROCORootLink from './node_modules/ROCORootLink/main.svelte';\nimport OLSKLanguageSwitcher from './node_modules/OLSKLanguageSwitcher/main.svelte';\n</script>\n\n<header class=\"Container\">\n\n<ROCORootLink />\n\n<h1>Idiomatic</h1>\n\n<OLSKLanguageSwitcher OLSKSharedActiveRouteConstant={ window.OLSKPublicConstants('OLSKSharedActiveRouteConstant') }\n\tOLSKSharedPageLanguagesAvailable={ window.OLSKPublicConstants('OLSKSharedPageLanguagesAvailable') }\n\tOLSKSharedPageCurrentLanguage={ window.OLSKPublicConstants('OLSKSharedPageCurrentLanguage') }\n\t/>\n\t\n</header>\n\n<style>\n.Container {\n\t/* AppContainerFlexbox:Child */\n\tflex-shrink: 0;\n\n\t/* ContainerFlexbox:Parent */\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n\n:global(.ROCORootLink) {\n\tcolor: inherit;\n}\n\n:global(.ROCORootLink img) {\n\twidth: 36px;\n}\n\nh1 {\n\tmargin: 0;\n\n\tfont-size: 20px;\n}\n\n:global(.OLSKLanguageSwitcher) {\n\tpadding: 10px;\n\n\tfont-size: 13px;\n}\n\n:global(.OLSKLanguageSwitcher span) {\n\t/* browser quirks */\n\tpadding-left: 4px;\n}\n</style>\n","<script>\nimport { onMount } from 'svelte';\n\nlet editorElement;\nexport let editorValue;\n\nonMount(function () {\n\tlet instance = CodeMirror.fromTextArea(editorElement, {\n\t\tmode: 'markdown',\n\t\tlineNumbers: false,\n\t\tlineWrapping: true,\n\t\textraKeys: {\n\t\t\tEnter: 'newlineAndIndentContinueMarkdownList',\n\t\t\tEsc: function () {\n\t\t\t\treturn document.querySelector('input').focus();\n\t\t\t},\n\t\t},\n\t});\n\n\tinstance.setValue(editorValue);\n\n\tinstance.on('change', function (instance, changeObject) {\n\t\tif (changeObject.origin === 'setValue') {\n\t\t\treturn;\n\t\t}\n\n\t\teditorValue = instance.getValue();\n\t});\n\n\tinstance.focus();\n});\n</script>\n\n<div class=\"EditorContainer\">\n\t<textarea bind:this={editorElement}></textarea>\n</div>\n\n<style>\n.EditorContainer\t{\n\tposition: relative;\t\n}\n</style>\n","<script>\nimport { onMount } from 'svelte';\n\nlet editorElement;\nexport let editorValue;\n\nonMount(function () {\n\tlet instance = CodeMirror.fromTextArea(editorElement, {\n\t\tmode: 'text/html',\n\t\tlineNumbers: true,\n\t\tlineWrapping: true,\n\t\textraKeys: {\n\t\t\tEsc: function () {\n\t\t\t\treturn document.querySelector('input').focus();\n\t\t\t},\n\t\t},\n\t});\n\n\tinstance.setValue(editorValue);\n\n\tinstance.on('change', function (instance, changeObject) {\n\t\tif (changeObject.origin === 'setValue') {\n\t\t\treturn;\n\t\t}\n\n\t\teditorValue = instance.getValue();\n\t});\n\n\tinstance.focus();\n});\n</script>\n\n<div class=\"EditorContainer\">\n\t<textarea bind:this={editorElement}></textarea>\n</div>\n\n<style>\n.EditorContainer\t{\n\tposition: relative;\t\n}\n</style>\n","<script>\nimport { onMount } from 'svelte';\n\nlet editorElement;\nexport let editorValue;\n\nonMount(function () {\n\tlet instance = pell.init({\n\t\telement: editorElement,\n\t\tonChange: function (inputData) {\n\t\t\teditorValue = inputData;\n\t\t},\n\t\tdefaultParagraphSeparator: 'p',\n\t\tactions: [\n\t\t\t'bold',\n\t\t\t'italic',\n\t\t\t'underline',\n\t\t],\n\t});\n\n\tinstance.onkeydown = function (event) {\n\t\tif (event.key === 'Escape') {\n\t\t  return document.querySelector('button').focus();\n\t\t}\n\n\t\tif (event.key !== 'Tab') {\n\t\t  return;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tif (event.shiftKey) {\n\t\t\treturn pell.exec('outdent');\n\t\t}\n\n\t\tpell.exec('indent');\n\t};\n\n\tinstance.content.innerHTML = editorValue;\n\n\tinstance.content.focus();\n});\n</script>\n\n<div class=\"EditorContainer\" bind:this={editorElement}></div>\n\n<style>\n.EditorContainer\t{\n\t/* EditorContainerFlexbox:Parent */\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.EditorContainer :global(.pell-content) {\n\tbackground: #fff;\n\n\t/* EditorContainerRTFFlexbox:Child */\n\tflex-grow: 1;\n}\n</style>\n","<script>\nimport { OLSKLocalized } from 'OLSKInternational';\n\nimport EditorMarkdown from './ModuleEditorMarkdown.svelte'\nimport EditorHTML from './ModuleEditorHTML.svelte'\nimport EditorRTF from './ModuleEditorRTF.svelte'\nconst RCSIdomaticLogic = window.RCSIdomaticLogic;\n\nlet sourceData = window.OLSKPublicConstants('RCSIdiomaticConvertSourceSampleData')\nexport let outputData\n\nlet sourceFormats = RCSIdomaticLogic.RCSIdiomaticLogicFormatsArray()\nlet selectedFormat = sourceFormats[0]\n\nlet convertFunctionMap = RCSIdomaticLogic.RCSIdiomaticLogicFormatsArray().reduce(function (coll, sourceFormat) {\n\t\treturn (coll[sourceFormat] = RCSIdomaticLogic.RCSIdiomaticLogicFormatsArray().reduce(function (coll, destinationFormat) {\n\t\t\treturn (coll[destinationFormat] = (function () {\n\t\t\t\tif (destinationFormat === RCSIdomaticLogic.RCSIdiomaticLogicFormatMarkdown()) {\n\t\t\t\t\treturn RCSIdomaticLogic.RCSIdiomaticLogicMarkdownForHTML\n\t\t\t\t}\n\n\t\t\t\tif (sourceFormat === RCSIdomaticLogic.RCSIdiomaticLogicFormatMarkdown()) {\n\t\t\t\t\treturn RCSIdomaticLogic.RCSIdiomaticLogicHTMLForMarkdown\n\t\t\t\t}\n\n\t\t\t\treturn function (e) {\n\t\t\t\t\treturn e\n\t\t\t\t}\n\t\t\t})()) && coll;\n\t\t}, {})) && coll;\n\t}, {})\n\nlet _selectedFormat\nlet selectedFormatDidChange = function (inputData) {\n\tif (_selectedFormat && _selectedFormat !== inputData) {\n\t\tsourceData = convertFunctionMap[_selectedFormat][inputData](sourceData)\n\t}\n\n\t_selectedFormat = inputData\n}\n$: selectedFormatDidChange(selectedFormat)\n\nlet sourceDataDidChange = function (inputData) {\n\toutputData = convertFunctionMap[selectedFormat][RCSIdomaticLogic.RCSIdiomaticLogicFormatHTML()](inputData)\n}\n$: sourceDataDidChange(sourceData)\n</script>\n\n<div class=\"Container ConvertPane\">\n\n<div class=\"PaneToolbar\">\n\t{#each sourceFormats as e, i}\n\t\t<input type=\"radio\" bind:group=\"{ selectedFormat }\" value=\"{ e }\" accesskey=\"{ i + 1 }\" id=\"SourceFormat{ e }\">\n\t\t<label for=\"SourceFormat{ e }\">\n\t\t\t{#if e === RCSIdomaticLogic.RCSIdiomaticLogicFormatMarkdown()}\n\t\t\t\t{ OLSKLocalized('RCSIdiomaticConvertToolbarButtonOptionMarkdownText') }\n\t\t\t{/if}\n\t\t\t{#if e === RCSIdomaticLogic.RCSIdiomaticLogicFormatHTML()}\n\t\t\t\t{ OLSKLocalized('RCSIdiomaticConvertToolbarButtonOptionHTMLText') }\n\t\t\t{/if}\n\t\t\t{#if e === RCSIdomaticLogic.RCSIdiomaticLogicFormatRTF()}\n\t\t\t\t{ OLSKLocalized('RCSIdiomaticConvertToolbarButtonOptionRTFText') }\n\t\t\t{/if}\n\t\t</label>\n\t{/each}\n</div>\n\n{#if selectedFormat === RCSIdomaticLogic.RCSIdiomaticLogicFormatMarkdown()}\n\t<EditorMarkdown bind:editorValue=\"{sourceData}\" />\n{/if}\n\n{#if selectedFormat === RCSIdomaticLogic.RCSIdiomaticLogicFormatHTML()}\n\t<EditorHTML bind:editorValue=\"{sourceData}\" />\n{/if}\n\n{#if selectedFormat === RCSIdomaticLogic.RCSIdiomaticLogicFormatRTF()}\n\t<EditorRTF bind:editorValue=\"{sourceData}\" />\n{/if}\n\n</div>\n\n<style>\n.Container {\n\t/* ContainerFlexbox:Parent */\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.PaneToolbar {\n\tbackground: #d9d9d9;\n}\n\n.PaneToolbar input {\n\tdisplay: none;\n}\n\n.PaneToolbar input:checked + label {\n\tbackground: #cccccc;\n}\n\n.PaneToolbar label {\n\tcursor: pointer;\n}\n\n:global(.EditorContainer) {\n\t/* ContainerFlexbox:Child */\n\tflex-grow: 1;\n}\n\n:global(.CodeMirror) {\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tleft: 0;\n\tbottom: 0;\n\n\t/* override defaults */\n\theight: 100%;\n}\n\n:global(.CodeMirror) pre {\n\tword-break: break-all;\n}\n</style>\n","<script>\nimport { OLSKLocalized } from 'OLSKInternational';\nexport let outputData\n</script>\n\n<div class=\"Container ConvertPane\">\n\n<div class=\"PaneToolbar\">\n\t<span>{ OLSKLocalized('RCSIdiomaticConvertOutputToolbarPreviewText') }</span>\n</div>\n\n<div id=\"OutputBodyContainer\">{@html outputData}</div>\n\n</div>\n\n<style>\n.Container {\n\t/* ContainerFlexbox:Parent */\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.PaneToolbar {\n\tbackground: #e6e6e6;\n}\n\n#OutputBodyContainer {\n\tbackground: #f1f1f1;\n\tpadding: 10px;\n\n\toverflow: auto;\n\n\t/* ContainerFlexbox:Child */\n\tflex-grow: 1;\n}\n</style>\n","<script>\nexport let OLSKServiceWorkerRegistrationRoute;\nexport let DebugFakeUpdateAlertVisible = false;\nexport let DebugEnableLogging = true;\nexport let DebugAllowLocalhost = false;\n\nimport { OLSKLocalized } from 'OLSKInternational';\n\nconst mod = {\n\n\t// VALUE\n\n\t_ValueRegistration: undefined,\n\n\t_ValueNextWorker: undefined,\n\n\t_ValueUpdateAlertIsVisible: DebugFakeUpdateAlertVisible,\n\n\t// INTERFACE\n\n\tInterfaceReloadButtonDidClick() {\n\t\tmod.ControlSkipWaiting();\n\t},\n\n\t// CONTROL\n\n\tControlSkipWaiting () {\n\t\tmod._ValueNextWorker.postMessage('OLSKServiceWorker_SkipWaiting');\n\t},\n\n\t// MESSAGE\n\n\tMessageUpdateFound (event) {\n\t\tDebugEnableLogging && console.log('updatefound', event);\n\n\t\tmod._ValueNextWorker = mod._ValueRegistration.installing;\n\n\t\tmod._ValueNextWorker.addEventListener('statechange', mod.MessageNextWorkerStateChange);\n\t},\n\n\tMessageNextWorkerStateChange (event) {\n\t\tDebugEnableLogging && console.log('statechange', mod._ValueNextWorker.state, event, navigator.serviceWorker.controller);\n\n\t\tif (mod._ValueNextWorker.state !== 'installed') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!navigator.serviceWorker.controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tmod._ValueUpdateAlertIsVisible = true;\n\t},\n\n\tMessageControllerChange (event) {\n\t\tDebugEnableLogging && console.log('controllerchange', event);\n\n\t\twindow.location.reload();\n\t},\n\n\t// SETUP\n\n\tasync SetupEverything() {\n\t\tif (!navigator.serviceWorker) {\n\t\t\treturn DebugEnableLogging && console.info('Service worker not available');\n\t\t}\n\n\t\tif (!OLSKServiceWorkerRegistrationRoute) {\n\t\t\treturn DebugEnableLogging && console.info('Missing registration route');\n\t\t}\n\n\t\tif (document.location.hostname === 'localhost' && !DebugAllowLocalhost) {\n\t\t\treturn DebugEnableLogging && console.info('OLSKServiceWorker: Skipping on localhost');\n\t\t};\n\n\t\tawait mod.SetupRegistration();\n\n\t\tmod.SetupControllerChange();\n\t},\n\n\tasync SetupRegistration() {\n\t\tmod._ValueRegistration = await navigator.serviceWorker.register(OLSKServiceWorkerRegistrationRoute);\n\t\t\n\t\tDebugEnableLogging && console.info('Service Worker Registered');\n\n\t\tmod._ValueRegistration.addEventListener('updatefound', mod.MessageUpdateFound);\n\t},\n\n\tSetupControllerChange () {\n\t\tnavigator.serviceWorker.addEventListener('controllerchange', mod.MessageControllerChange);\n\t},\n\n\t// LIFECYCLE\n\n\tLifecycleModuleDidMount() {\n\t\tmod.SetupEverything();\n\t},\n\n};\n\nmod.LifecycleModuleDidMount();\n</script>\n\n{#if mod._ValueUpdateAlertIsVisible }\n<div class=\"OLSKServiceWorkerUpdateAlert\" on:click={ () => mod._ValueUpdateAlertIsVisible = false }>\n\t<span class=\"OLSKServiceWorkerUpdateAlertLabel\">{ OLSKLocalized('OLSKServiceWorkerUpdateAlertLabelText') }</span>\n\t<button class=\"OLSKServiceWorkerUpdateAlertReloadButton OLSKDecorPress OLSKDecorPressCall\" on:click={ mod.InterfaceReloadButtonDidClick }>{ OLSKLocalized('OLSKServiceWorkerUpdateAlertReloadButtonText') }</button>\n</div>\n{/if}\n\n<style type=\"text/css\">\n.OLSKServiceWorkerUpdateAlert {\n\t--OLSKCommonForeground: #fd66ff;\n\t--OLSKServiceWorkerUpdateAlertBorderWidth: 1.5px;\n\n\tpadding: 7px;\n\tborder-top: var(--OLSKServiceWorkerUpdateAlertBorderWidth) solid var(--OLSKCommonForeground);\n\n\tbackground: #8000ff;\n\tcolor: var(--OLSKCommonForeground);\n\tfont-family: 'Helvetica Neue', 'Helvetica', sans-serif;\n\n\t/* OLSKServiceWorkerUpdateAlertFlexbox:Parent */\n\tdisplay: flex;\n\talign-items: center;\n}\n\n@media screen and (max-width: 760px) {\n\n.OLSKServiceWorkerUpdateAlert {\n\tpadding: 10px;\n}\n\n}\n\n.OLSKServiceWorkerUpdateAlertLabel {\n\t/* OLSKServiceWorkerUpdateAlertFlexbox:Child */\n\tflex-grow: 1;\n}\n\n.OLSKServiceWorkerUpdateAlertReloadButton {\n\tpadding: 5px;\n\tborder-width: var(--OLSKServiceWorkerUpdateAlertBorderWidth) !important;\n\n\tfont-weight: normal;\n\tfont-size: inherit;\n}\n</style>\n","<script>\nimport Header from './ModuleHeader.svelte'\nimport PaneSource from './ModulePaneSource.svelte'\nimport PaneOutput from './ModulePaneOutput.svelte'\n\nimport { OLSKLocalized } from 'OLSKInternational';\n\nimport OLSKString from 'OLSKString';\nexport const OLSKFormatted = OLSKString.OLSKStringFormatted;\n\nimport OLSKServiceWorker from './node_modules/OLSKServiceWorker/main.svelte';\n\nlet outputData\n</script>\n\n<div class=\"AppContainer\">\n\n<Header/>\n\n<div id=\"ConvertContainer\">\n\t<PaneSource bind:outputData />\n\n\t<PaneOutput {outputData} />\n</div>\n\n<OLSKServiceWorker OLSKServiceWorkerRegistrationRoute={ window.OLSKCanonical('RCIServiceWorkerRoute') } />\n\n</div>\n\n<style>\n.AppContainer {\n\theight: 100vh;\n\n\tfont-family: 'Helvetica Neue', 'Helvetica', sans;\n\n\t/* AppContainerFlexbox:Parent */\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n#ConvertContainer {\n\t/* AppContainerFlexbox:Child */\n\tflex-grow: 1;\n\n\t/* ConvertContainerFlexbox:Parent */\n\tdisplay: flex;\n}\n\n.AppContainer :global(.ConvertPane) {\n\t/* ConvertContainerFlexbox:Child */\n\tflex-grow: 1;\n\tflex-basis: 50%;\n}\n\n.AppContainer :global(.PaneToolbar) {\n\tfont-size: 14px;\n}\n\n.AppContainer :global(.PaneToolbar *) {\n\tdisplay: inline-block;\n\tpadding: 10px;\n}\n\n:global(.OLSKBanner, .OLSKBanner *) {\n\tdisplay: none !important;\n}\n</style>\n","import RollupStart from './Main.svelte';\n\nconst RCSIdiomatic = new RollupStart({\n\ttarget: document.body,\n});\n\nexport default RCSIdiomatic;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","undefined","bound","create_component","mount_component","customElement","m","new_on_destroy","map","filter","on_destroy","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","splice","$set","$$props","obj","$$set","keys","exports","mod","OLSKInternationalDefaultIdentifier","OLSKInternationalIsTranslationFileBasename","inputData","split","match","shift","_OLSKInternationalLanguageID","OLSKInternationalLanguageID","OLSKInternationalSimplifiedLanguageCode","replace","OLSKInternationalLocalizedString","translationKey","translationDictionary","localizedString","console","log","OLSKInternationalLocalizedStringCallback","dictionary","fallbackLocales","isArray","_locales","reverse","concat","signature","requestLocales","outputData","locales","join","_OLSKInternationalPaths","cwd","trim","_require","require","globSync","realpath","basename","_OLSKInternationalConstructedDictionary","reduce","coll","item","key","assign","load","readFileSync","OLSKInternationalDictionary","_OLSKInternationalCompilationObject","languageID","_OLSKInternationalCompilationFilePath","_SafeDump","dump","lineWidth","Infinity","OLSKInternationalWriteCompilationFile","outputDirectory","dirname","existsSync","mkdirSync","writeFileSync","OLSKInternationalSpreadCompilationFile","compilation","OLSKInternationalAddControllerLanguageCode","matchBase","file","OLSKControllerRoutes","entries","OLSKRouteSignature","OLSKRouteLanguageCodes","includes","JSON","parse","process","argv","endsWith","exit","defineProperty","factory","window","OLSKPublicConstants","OLSKLocalized","OLSKRootLinkURL","OLSKRootLinkImageURL","OLSKRootLinkTextAlternate","OLSKLanguageSwitcherCodesMap","en","fr","es","pt","de","OLSKLanguageSwitcherLauncherFakeItemProxy","LCHRecipeName","LCHRecipeCallback","OLSKLanguageSwitcherLauncherItemSwitch","params","debug","ParamLanguageCode","ParamRouteConstant","OLSKCanonical","LCHRecipeSignature","DebugWindow","location","OLSKRoutingLanguage","LCHRecipeIsExcluded","ParamAuthorized","OLSKLanguageSwitcherRecipes","ParamLanguageCodes","ParamCurrentLanguage","ParamSpecUI","OLSKStringFormatted","substitutions","values","arguments","slice","formattedString","_OLSKStringAllMatches","regex","string","matches","exec","OLSKStringReplaceTokens","param1","param2","RegExp","OLSKStringPatch","param3","error","OLSKStringMatch","toLowerCase","normalize","OLSKStringSnippet","OLSKStringEncode","encodeURIComponent","toUpperCase","DataLinkTitle","OLSKSharedPageLanguagesAvailable","OLSKSharedPageCurrentLanguage","OLSKSharedActiveRouteConstant","OLSKString","logic","editorElement","editorValue","CodeMirror","fromTextArea","mode","lineNumbers","lineWrapping","extraKeys","Enter","Esc","querySelector","focus","setValue","on","changeObject","origin","getValue","pell","onChange","defaultParagraphSeparator","actions","onkeydown","preventDefault","shiftKey","content","innerHTML","RCSIdiomaticLogicFormatMarkdown","RCSIdiomaticLogicFormatHTML","RCSIdiomaticLogicFormatRTF","group","_inputs","inputs","input","RCSIdomaticLogic","_selectedFormat","sourceData","sourceFormats","RCSIdiomaticLogicFormatsArray","selectedFormat","convertFunctionMap","sourceFormat","destinationFormat","RCSIdiomaticLogicMarkdownForHTML","RCSIdiomaticLogicHTMLForMarkdown","sourceDataDidChange","InterfaceReloadButtonDidClick","_ValueUpdateAlertIsVisible","OLSKServiceWorkerRegistrationRoute","DebugFakeUpdateAlertVisible","DebugEnableLogging","DebugAllowLocalhost","_ValueRegistration","_ValueNextWorker","ControlSkipWaiting","postMessage","MessageUpdateFound","installing","MessageNextWorkerStateChange","state","navigator","serviceWorker","controller","MessageControllerChange","reload","hostname","SetupRegistration","SetupControllerChange","info","register","LifecycleModuleDidMount","SetupEverything","OLSKFormatted","body"],"mappings":"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"}